% MIBItileOneMarkerAcrossPoints
% Script creates a tiles images of each channel in different points in the
% dimensions specified by the user. All points are scaled the same.

corePath = {'/Users/lkeren/Box/Leeat_Share/Data/MIBIData/Melanoma/180807_Melanoma_tonsil/Point1/dataNoBg.mat', ...
    '/Users/lkeren/Box/Leeat_Share/Data/MIBIData/Melanoma/180807_Melanoma_tonsil/Point2/dataNoBg.mat', ...
    '/Users/lkeren/Box/Leeat_Share/Data/MIBIData/Melanoma/180807_Melanoma_tonsil/Point3/dataNoBg.mat', ...
    '/Users/lkeren/Box/Leeat_Share/Data/MIBIData/Melanoma/180807_Melanoma_tonsil/Point4/dataNoBg.mat', ...
    '/Users/lkeren/Box/Leeat_Share/Data/MIBIData/Melanoma/180807_Melanoma_tonsil/Point5/dataNoBg.mat', ...
    '/Users/lkeren/Box/Leeat_Share/Data/MIBIData/Melanoma/180807_Melanoma_tonsil/Point6/dataNoBg.mat'}; % cores to work on. Can add several paths, separated by commas.
massFile = '/Users/lkeren/Box/Leeat_Share/Melanoma/PanelTests/180716_Melanoma_panel.csv'; % panel csv
xTileNum = 1; % Number of rows in tile
yTileNum = 6; % Number of columns in tile
outDir = '/Users/lkeren/Box/Leeat_Share/Data/MIBIData/Melanoma/180807_Melanoma_tonsil/TiledImages';
defaultCap = 5; % Cap to use if no other cap is specified in the massFile

%% script

massDS = MibiReadMassData(massFile);
coreNum = length(corePath);
mkdir (outDir);
% load all cores
p=cell(coreNum,1);
for i=1:coreNum
    p{i} = load([corePath{i}]);
end

%for i=1:length(massDS)
for i=28
    % check if massDS has the cap variable and if it isn't empty
    if ismember('Cap', massDS.Properties.VarNames) && ~isempty(massDS.Cap(i))
        currCap = massDS.Cap(i);
    else
        currCap = defaultCap;
    end
    % Generate the data to plot
    for j=1:coreNum
        data = p{j}.countsNoBg(:,:,i);
        data(data>currCap)=currCap;
        currData(:,:,1,j) = data;
    end
    f=figure;
    hIm = imdisp(currData,'Size',[xTileNum,yTileNum],'Border',[0.005,0.005]);
    
end